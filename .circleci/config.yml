version: 2.1 # use CircleCI 2.1
anchors:
  filters: &filters
    filters:
      branches:
        only: main

orbs:
  aws-ecr: circleci/aws-ecr@6.15.2

jobs: # a collection of steps
  build: # runs not using Workflows must have a `build` job as entry point

    working_directory: ~/Portfolio-OTA/portfolio # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      # check out source code to working directory
      - checkout:
          path: ~/Portfolio-OTA

      - restore_cache: # restore the saved cache after the first run or if `pom.xml` has changed
    # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
          key: portfolio-{{ checksum "pom.xml" }}

      - run: mvn dependency:go-offline # gets the project dependencies

      - save_cache: # saves the project dependencies
          paths:
            - ~/.m2
          key: portfolio-{{ checksum "pom.xml" }}

      - run: mvn clean install # run the actual tests

      - store_test_results: # テスト メタデータを `target/surefire-reports` ディレクトリからアップロードし、CircleCI ダッシュボードに表示されるようにします
      # アップロードしたテスト結果は、テスト サマリー (https://circleci.com/ja/docs/2.0/collect-test-data/) に表示されます
          path: target/surefire-reports

      - store_artifacts: # uberjar をアーティファクトとして保存します
      # アップロードしたテスト結果は、アーティファクト (https://circleci.com/ja/docs/2.0/artifacts/) に表示されます
          path: target/adview-docker.jar
      # デプロイの構成例は https://circleci.com/ja/docs/2.0/deployment-integrations/ を参照してください

  build_and_push_image:
    working_directory: ~/Portfolio-OTA/portfolio # directory where steps will run

    docker: # run the steps with Docker
      - image: circleci/openjdk:11-stretch # ...with this image as the primary container; this is where all `steps` will run

    steps: # a collection of executable commands

      # check out source code to working directory
      
      - checkout:
          path: ~/Portfolio-OTA
      - aws-ecr/build-and-push-image:
          <<: *filters
          name: Build and Push Docker Image
          account-url: AWS_ECR_ACCOUNT_URL
          aws-access-key-id: AWS_ACCESS_KEY_ID
          aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          region: AWS_DEFAULT_REGION
          context: adview-test
          create-repo: false
          dockerfile: ~/Portfolio-OTA/portfolio/Dockerfile
          no-output-timeout: 20m
          path: .
          profile-name: default
          repo: adview
          skip-when-tags-exist: false
          tag: 'latest,$CIRCLE_SHA1'
